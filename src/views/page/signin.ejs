<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/head.ejs') %>
    <link rel="stylesheet" href="/toastr/toastr.min.css"> <!-- tiene que despues del CDN de bootstrap -->
    <script src="/toastr/toastr.min.js"></script>
    <title>Blissenet Signin</title>

</head>
<style>
    
    .toast-success {
      /* Esta clase es unicamente para dar color al alert toastr de tipo success que debe ser violeta */
        background-color: #6f42c1; /* Azul tirando a morado */
        color: white; /* Color del texto */
    }  

</style>
<body class="mainTheme">

    <main>

    <%- include('../partials/navi-simple.ejs') %>

    <% if (userError) { %>
        <%- include('../alert/userError.ejs') %>
    <% }; %>

    <% if (passwError) { %>
        <%- include('../alert/passwError.ejs') %>
    <% }; %>

    <% if (registered) { %>
        <%- include('../alert/registered.ejs') %>
    <% }; %>

    <% if (donePasswSuccess) { %>
        <%- include('../alert/donePasswSuccess.ejs') %>
    <% }; %>

    <% if (recaptchaFail) { %>
        <%- include('../alert/recaptchaFail.ejs') %>
    <% }; %>
        
    <% if (seeBot) { %>
        <%- include('../alert/seeBot.ejs') %>
    <% }; %>
    

    <% if (signIn.length !==0 ) { %>
    <div class="container-fluid border-top" style="background-size: cover; background-image: url('<%= signIn[0].url %>'); height: 100%;" >
    <% } else { %>
    <div class="container-fluid">    
    <% }; %>    

        <div class="row d-flex justify-content-end mt-4">
            <div class="col-xl-4 col-lg-4 col-md-5 col-sm-10 col-12">
 
                <div class="card formTransp mt-4 rounded-2 shadow">
                    <div class="card-header">
                        <i class="bi bi-door-open mx-1"></i> Login
                    </div>
                    <% if (!seeBotObjec) {%>
                    <div class="card-body p-4 border-top border-dark">
                        <form action="/myaccount/signin" method="POST" id="signin">
                            <div class="form-group my-2">
                                <input type="email" name="email" class="form-control" id="emailInput"  placeholder="Su email" 
                                  id="client_user" autocomplete="off" required>
                            </div>
                            <div class="form-group my-2" style="position: relative;">
                                <input type="password" name="password" placeholder="Su contraseña" class="form-control"
                                id="client_passw" autocomplete="off" maxlength="20" required style="letter-spacing: 3px;">
                                <i class="bi bi-eye-slash text-dark cursor-pointer" id="toggleSeePassw" style="position: absolute; right: 10px; top: 6px;"></i>
                            </div>

                            <input type="hidden" name="recaptchaResponse" id="recaptchaResponse">
                            <div class="form-group mt-4 mb-2">
                                
                                <button class="g-recaptcha form-control btn btn-dark" id="btnLogin"
                                    data-sitekey="6LccKFYlAAAAAKiLwTw_Xz2l7_Qm_6PTe7_RyEG0"
                                    data-action='login' data-callback='onSubmitSignin'>
                                    Login
                                </button> 
                                
                                <button class="form-control btn btn-dark close" id="btnLoginDisabled" disabled>
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    login ...
                                </button>

                                <button class="form-control btn btn-dark close" id="btnLoginLock" disabled> <i class="bi bi-lock-fill me-2"></i>  Send Token  </button>

                            </div>    

                            <br>

                            <div class="form-group my-2 p-1 bg-light rounded-2 text-dark">
                                <p class="mx-1 mb-0"> <small>¡Upp olvide mi Password! <a href="/myaccount/signin-forgottenpassw" class="text-dark ms-2 fw-bold"> Clic here</a> </small></p>
                            </div>

                            <div class="form-group my-2 p-1 bg-light rounded-2 text-dark">
                                <p class=" mx-1 mb-0"><small> No tengo una cuenta. <a href="/myaccount/signup" class="text-danger ms-2 fw-bold">¡Registarme!</a> </small> </p>
                            </div>
                            
                        </form>
                    </div>
                    <% } else { %>
                    <div class="card-body p-4 border-top border-dark">
                        <form>
                            <div class="form-group my-2">
                                <input type="email" name="email" placeholder="Su email" class="form-control"
                                    id="client_user" autocomplete="off" required>
                            </div>
                            <div class="form-group my-2">
                                <input type="password" name="password" placeholder="Su contraseña" class="form-control"
                                    id="client_passw" autocomplete="off" style="letter-spacing: 3px;" maxlength="20" required>
                            </div>

                            
                            <div class="form-group mt-4 mb-2">
                                
                                <button class="form-control btn btn-secondary" disabled>
                                    Login Block
                                </button>   

                            </div>  
                            
                            <br>
                            <div class="form-group my-2 p-1 bg-light rounded-2 text-dark">
                                <p class="mx-1 mb-0"> <small>¡Upp olvide mi Password! <a href="/myaccount/signin-forgottenpassw" class="text-dark ms-2 fw-bold"> Clic here</a> </small></p>
                            </div>

                            <div class="form-group my-2 p-1 bg-light rounded-2 text-dark">
                                <p  class="mx-1 mb-0"><small> No tengo una cuenta. <a class="text-danger ms-2 fw-bold">¡Registarme!</a> </small> </p>
                            </div>
                            
                        </form>
                    </div>
                    <% }; %>    
                </div>
                 
            </div>
        </div>
        
    </div>

    <%- include('../partials/scripts.ejs')%>
    <%- include('../partials/scriptsOnlyNavi-simpleNoIcons.ejs') %>

    </main>
</body>
</html>


<script>
    //toggle de visibilidad de password
    const togglePassword = document.getElementById('toggleSeePassw');
    const passwordInput = document.getElementById('client_passw')

    togglePassword.addEventListener('click', () => {
        // Cambiar el tipo de input entre 'password' y 'text'
        
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        //console.log("Que type es >>", type);
        if (type == "text"){
            togglePassword.classList.remove('bi-eye-slash')
            togglePassword.classList.add('bi-eye')
        } else {
            togglePassword.classList.remove('bi-eye')
            togglePassword.classList.add('bi-eye-slash')
        }

        
    });
</script>



<!--
Diferentes acciones dependiendo de la interaccion que este ejecutando.
Esto es mportante para google reCAPTCHA
data-action='login'
data-action='register'
data-action='forgot_password'
-->

<script>
    // ir a la pagina > google.com/recaptcha/about/
    // acceder a V3 Admin Console  (hacer esto con la cuenta de google scorpinosred@gmail.com)
    const emailInput = document.getElementById('emailInput');
    const TokenRecaptacha = document.getElementById('recaptchaResponse');
    const btnLogin = document.getElementById('btnLogin');
    const btnLoginDisabled = document.getElementById('btnLoginDisabled');
    const btnLoginLock = document.getElementById('btnLoginLock');


    btnLogin.addEventListener('click', onSubmitSignin)

    let toastShown = false; // Variable para controlar la visualización del toast

    async function onSubmitSignin() {

        
        const emailInputValue = emailInput.value;
        console.log("emailInputValue :",  emailInputValue );
        console.log("emailInputValue.length : ", emailInputValue.length );
        btnLogin.classList.add('close');
  

        if (emailInputValue.length > 10 && emailInputValue.includes('@') ){

            let response = grecaptcha.getResponse();

             btnLoginDisabled.classList.remove('close');
            //console.log(typeof response);
            //console.log(response.length );
            //cuando tenemos el token de reCAPTCHA es cuando lo agregamos en el input hidden
            // y de esta forma sabemso que todo llegara junto para ser validado en el servidor
            //y tambien llega una sola vez. 
            if (response.length !==0){
                TokenRecaptacha.value = response;
                //console.log("response -->", response);

                document.getElementById("signin").submit();
                //console.log("enviando al backend");
            }
            
        } else {

            btnLoginLock.classList.remove('close');

            console.log("no hay un correo que enviar");
            if (!toastShown) { // Solo mostrar si no se ha mostrado antes
                const response = "Coloque un correo valido";
                mostrarToast(response, 'right', 'danger', '¡Atención!', false);
                toastShown = true; // Marcar como mostrado
            }

            setTimeout(() => {
                btnLogin.classList.remove('close');
                btnLoginLock.classList.add('close');
                toastShown = false; // Reiniciar el estado después de un tiempo
            }, 10000);

        }

    }


</script>

<script>
    window.addEventListener('load', ()=>{
        const clientUser = document.getElementById('client_user');
        const clientPassw = document.getElementById('client_passw');

        clientUser.value= "";
        clientPassw.value= "";
    })
</script>

<script>


    function mostrarToast(mensaje, posicion, color, titulo = '', conBotonCerrar = false) {
        // Configuración predeterminada
        toastr.options = {
            "closeButton": conBotonCerrar, // Agregar botón de cerrar si se solicita
            "debug": false,
            "newestOnTop": false,
            "progressBar": !conBotonCerrar, // Si tiene botón de cerrar, no mostrar barra de progreso
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "600",
            "hideDuration": "1000",
            "timeOut": conBotonCerrar ? false : "8000", // No se oculta automáticamente si tiene botón de cerrar
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
  
        // Configurar la posición
        switch (posicion) {
            case 'center':
                toastr.options.positionClass = 'toast-top-center';
                break;
            case 'left':
                toastr.options.positionClass = 'toast-top-left';
                break;
            case 'right':
                toastr.options.positionClass = 'toast-top-right';
                break;
            default:
                toastr.options.positionClass = 'toast-top-right'; // Posición predeterminada
        }
  
        // Mostrar el mensaje según el color especificado
        switch (color) {
            case 'success':
                titulo ? toastr.success(mensaje, titulo) : toastr.success(mensaje);
                break;
            case 'info':
                titulo ? toastr.info(mensaje, titulo) : toastr.info(mensaje);
                break;
            case 'warning':
                titulo ? toastr.warning(mensaje, titulo) : toastr.warning(mensaje);
                break;
            case 'danger':
                titulo ? toastr.error(mensaje, titulo) : toastr.error(mensaje);
                break;
            case 'primary':
                titulo ? toastr.info(mensaje, titulo, { toastClass: 'toast-primary' }) : toastr.info(mensaje, '', { toastClass: 'toast-primary' });
                break;
            case 'dark':
                titulo ? toastr.info(mensaje, titulo, { toastClass: 'toast-dark' }) : toastr.info(mensaje, '', { toastClass: 'toast-dark' });
                break;
            default:
                console.warn('Color no válido. Usando el color por defecto (success).');
                titulo ? toastr.success(mensaje, titulo) : toastr.success(mensaje);
        }
    }
  
  

   //mostrarToast( response , 'right', 'danger', '', true ); // Agrega título aquí
  
</script>

<!-- 
Nota sobre reCAPTCHA de Google
pasos para integrarlo en el proyecto
1. tener la api del front para pedir el token, este caso le tenemos en el partial/head 


    <script src="https://www.google.com/recaptcha/api.js" async defer></script>

2. en el front se usa dentro de un buttom como lo puedes apreciar arriba    

    <button class="g-recaptcha form-control btn btn-dark" id="btnLogin"
        data-sitekey="6LccKFYlAAAAAKiLwTw_Xz2l7_Qm_6PTe7_RyEG0"
        data-action='login' data-callback='onSubmitSignin'>
        Login
    </button> 

    aqui debes tener en data-sitekey la clave del sitio que te provee tu cuenta de google reCAPTCHA
    Esto viene con una clave de secreta que estara en el servidor. 

3. en el servidor se hace una peticion de validacion a la api de google reCAPTCHA para Validar   

    fetch('https://www.google.com/recaptcha/api/siteverify', {
        method: "post",
        body: new URLSearchParams(datos),
        headers: {"content-type" : "application/x-www-form-urlencoded"}

    })
    .then(response =>response.json() )
    .then( jsonx => {

        //console.log(jsonx);
        const success = jsonx.success;
        const score = jsonx.score;
        //const score = 0.4; para test
        console.log(`success -> ${success} | score -> ${score}`);

        if (success === true){
            if (score >= 0.5){
                console.log("Es un humano");
                //aqui todo el resto del proceso
            } else {
                console.log("Es un bot");
            } 
        else {
            console.log("La verificacion de recaptcha ha fallado");
        }  
    })
    .catch( err => console.log(err)); 
    
    4. debes tener en cuenta que el objeto que recibes de google reCAPTCHA es un objeto
        { success: true, score: 0.9 } entre otros datos.

        el score es el rango de respuesta que identifica a un humano de un bot. 
        1 es humano
        0.5 intermedio (no sabemos que es)
        0 es un bot

        teniendo este rango claro todo lo que sea igual o menor a 0.5 es un bot.
        
-->